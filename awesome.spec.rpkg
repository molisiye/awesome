# The following tag is to get correct syntax highlighting for this file in vim text editor
# vim: syntax=spec

# git_dir_name returns repository name derived from remote Git repository URL
Name:       {{{ git_name name="awesome-git"}}}

# git_dir_version returns version based on commit and tag history of the Git project
Version:    {{{ git_version }}}

# This can be useful later for adding downstream patches
Release:    {{{git_revision}}}%{?dist}

# Basic description of the BuildRequires:
Summary:    Awesome is a highly configurable, next generation framework window manager for X.

# License. Hopefully free or at least open-source. We assume GPLv2+ here.
License:    GPLv2

# Home page of the project. Can also point to the public Git repository page.
URL:        https://awesomewm.org

# Detailed information about the source Git repository and the source commit
# for the created rpm BuildRequires:
VCS:        {{{ git_dir_vcs }}}

# git_dir_pack macro places the repository content (the source files) into a tarball
# and returns its filename. The tarball will be used to build the rpm.
Source:     {{{ git_pack }}}

BuildRequires: make
BuildRequires: gcc
BuildRequires: desktop-file-util
BuildRequires: libX11-devel
BuildRequires: ImageMagick
BuildRequires: xmlto
BuildRequires: cairo-devel
BuildRequires: dbus-devel
BuildRequires: gdk-pixbuf2-devel
BuildRequires: libxkbcommon-devel
BuildRequires: gzip
BuildRequires: libxkbcommon-x11-devel
BuildRequires: libxcb-devel
BuildRequires: libxcb-devel
BuildRequires: rubygem-asciidoctor
BuildRequires: lua-ldoc
BuildRequires: libxcb-devel
BuildRequires: cairo-devel
BuildRequires: libxcb-devel
BuildRequires: xcb-util-cursor-devel
BuildRequires: libxcb-devel
BuildRequires: lua-devel
BuildRequires: glib2-devel
BuildRequires: xcb-util-devel
BuildRequires: cmake
BuildRequires: libxcb-devel
BuildRequires: xorg-x11-proto-devel
BuildRequires: lua-lgi
BuildRequires: lua-lgi-compat
BuildRequires: startup-notification-devel
BuildRequires: libxdg-basedir-devel
BuildRequires: xcb-util-wm-devel

# More detailed description of the BuildRequires:
%description
This is a hello world BuildRequires:.

# The following four sections already describe the rpm build process itself.
# prep will extract the tarball defined as Source above and descend into it.
%prep
{{{ git_dir_setup_macro }}}

# This will invoke `make` command in the directory with the extracted sources.
%build
CMAKE_ARGS="-DLUA_EXECUTABLE=/usr/bin/luajit -DLUA_LIBRARY=/usr/lib64/libluajit-5.1.so -DLUA_INCLUDE_DIR=/usr/include/luajit-2.1" make

# This will copy the files generated by the `make` command above into
# the installable rpm BuildRequires:.
%install
make install root=%{buildroot}

# This lists all the files that are included in the rpm BuildRequires: and that
# are going to be installed into target system where the rpm is installed.
#%files
#/usr/bin/hello_rpkg

# Finally, changes from the latest release of your application are generated from
# your project's Git history. It will be empty until you make first annotated Git tag.
%changelog
{{{ git_dir_changelog }}}
